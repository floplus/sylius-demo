# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: de_DE

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\ChannelContext\DummyChannelContext:
        arguments: ['@request_stack', '@sylius.repository.channel']
        tags:
            - { name: sylius.context.channel }

    App\Shipping\ZoneBasedShippingCalculator:
        arguments: ['@sylius.zone_matcher']
        tags:
            - {
                name: sylius.shipping_calculator
                calculator: zone_based
                label: Zone based calculator
                form_type: App\Form\Type\ZoneBasedShippingCalculatorConfigurationType
            }

    App\EventListener\AdminMenuListener:
        tags:
            - {
                  name: kernel.event_listener
                  event: sylius.menu.admin.main
                  method: addMenu
            }

    App\Form\Type\PriceFormType:
        arguments:
            - '%app.model.price.class%'

    App\EventListener\SendPriceCreatedEmailEventListener:
        arguments: ['@sylius.email_sender']
        tags:
            - {
                  name: kernel.event_listener
                  event: app.price.post_approve
                  method: send
            }
